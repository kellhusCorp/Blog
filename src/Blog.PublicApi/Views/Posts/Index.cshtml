@model Blog.PublicApi.Models.PostsIndexViewModel
@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer Localizer

@{
    ViewData["Title"] = Localizer["Blog"];
}

<div class="h-100 p-5 border rounded-3">
    <div class="container">
        <div class="row">
            <h1 class="text-md-left">
                .NET Blog
            </h1>
            <p class="text-md-left">
                There will be a brief description here
            </p>
        </div>
    </div>
</div>

<div class="container">
    @if (!string.IsNullOrEmpty(Model!.Tag) || !string.IsNullOrEmpty(Model.Search))
    {
        <div class="card mt-3 mb-3">
            <div class="card-body">
                @if (!string.IsNullOrEmpty(Model.Tag))
                {
                    <i class="fas fa-tag"></i>
                    @:@Localizer["Tag"]: @Model.Tag
                }

                @if (!string.IsNullOrEmpty(Model.Tag) && !string.IsNullOrEmpty(Model.Search))
                {
                    <br/>
                }
                @if (!string.IsNullOrEmpty(Model.Search))
                {
                    <i class="fas fa-search"></i>
                    @Localizer["Search:"]
                    @Model.Search
                }
            </div>
        </div>
    }

    <div class="row">
        <div class="col-md-12 col-lg-9">
            @if (Model.Entries.TotalNumberOfItems > 0)
            {
                foreach (var entry in Model.Entries)
                {
                    <partial name="_PreviewBlog" model="entry"/>
                }

                <pager paged-result="Model.Entries"></pager>
            }
            else
            {
                <p>@Localizer["No blog posts available"]</p>
            }
        </div>
        <div class="col-lg-3 d-lg-block">
            <div class="row">
                <div class="col-lg-12 col-md-6 col-sm-6 col-6 mb-3">
                    @if (Model.Tags.Count > 0)
                    {
                        <h3>@Localizer["Tags"]</h3>
                        @foreach (var tag in Model.Tags)
                        {
                            <i class="fas fa-tag"></i>
                            <a asp-controller="Posts" asp-action="Index" asp-route-tag="@tag.Name" class="text-nowrap">
                                @tag.Name
                            </a>
                        }
                    }
                </div>
                
                <div class="col-lg-12 col-md-6 col-sm-6 col-6 mb-3">
                    @if (Model.PopularPosts.Count > 0)
                    {
                        <h3>@Localizer["Popular posts"]</h3>
                        @foreach (var entry in Model.PopularPosts)
                        {
                            @Html.RouteLink(entry.Header, new {controller = "Posts", action="Entry", year = entry.PublishDate.Year, month = entry.PublishDate.Month, day = entry.PublishDate.Day, id = entry.PermanentLink})
                            <br/>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</div>